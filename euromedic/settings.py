"""
Django settings for euromedic project.

Generated by 'django-admin startproject' using Django 2.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "k=fmo#i#pyhc22y9mab555ef@(*=g8b6z0f+*x8ef8=sdx)kf&"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# TODO update
ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    "modeltranslation",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.humanize",
    # custom
    "corsheaders",
    "rest_framework",
    "django_elasticsearch_dsl",
    "django_elasticsearch_dsl_drf",
    "compressor",
    "django_better_admin_arrayfield",
    # our apps
    "core",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    # custom
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "euromedic.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "core.context_processors.footer_hospitals",
            ]
        },
    }
]

WSGI_APPLICATION = "euromedic.wsgi.application"

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.postgresql_psycopg2",
#         "NAME": os.getenv("DB_NAME", "euromedik"),
#         "USER": os.getenv("DB_USER", "euromedikuser"),
#         "PASSWORD": os.getenv("DB_PASS", "xks7V6BNyN9eK5IcuhKK"),
#         "HOST": "euromedik.txlab.org",
#         "PORT": "5432",
#     }
# }

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "NAME": os.getenv("DB_NAME", "euromedik"),
        "USER": os.getenv("DB_USER", "euromedik"),
        "PASSWORD": os.getenv("DB_PASS", "v3rys3cr3t"),
        "HOST": os.getenv("DB_HOST", "localhost"),
        "PORT": "5432",
    }
}

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework.authentication.BasicAuthentication",
        "rest_framework.authentication.SessionAuthentication",
    ),
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 100,
    "ORDERING_PARAM": "order",
}

# Elasticsearch configuration
ELASTICSEARCH_DSL = {"default": {"hosts": os.getenv("ES_HOST", "localhost:9200")}}

# Name of the Elasticsearch index
ELASTICSEARCH_INDEX_NAMES = {
    # TODO make dynamic
    "core.documents.service_sr": "dev_service_sr",
    "core.documents.service_en": "dev_service_en",
    "core.documents.service_sq": "dev_service_sq",
    "core.documents.doctor": "dev_doctor",
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

# CORS settings
CORS_ORIGIN_ALLOW_ALL = True

LANGUAGE_CODE = "sr"

MODELTRANSLATION_DEFAULT_LANGUAGE = "sr"
MODELTRANSLATION_PREPOPULATE_LANGUAGE = "sr"

LANGUAGES = (("sr", "Serbian"), ("en", "English"), ("sq", "Albanian"))

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = "/static/"

STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]
STATICFILES_FINDERS = [
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
    "compressor.finders.CompressorFinder",
]

STATIC_ROOT = "static_out/"
MEDIA_URL = "/media/"
MEDIA_ROOT = "media/"
SVG_UPLOAD_ROOT = "safesvg/"

COMPRESS_PRECOMPILERS = (("text/x-scss", "django_libsass.SassCompiler"),)

LOGGING = {
    "version": 1,
    "filters": {"require_debug_true": {"()": "django.utils.log.RequireDebugTrue"}},
    "handlers": {
        "console": {
            "level": "DEBUG",
            "filters": ["require_debug_true"],
            "class": "logging.StreamHandler",
        }
    },
    # "loggers": {"django.db.backends": {"level": "DEBUG", "handlers": ["console"]}},
}

APPEND_SLASH = True
